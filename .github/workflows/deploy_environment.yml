name: Deploy Laravel Application 2.0

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        type: environment
        required: true
        default: 'staging'

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    concurrency: ${{ inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, intl, pdo, pdo_mysql
          tools: composer

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --no-interaction --prefer-dist --optimize-autoloader --no-dev

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'

      - name: Get yarn cache directory
        id: yarn-cache
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install Node.js dependencies
        run: yarn install --frozen-lockfile --check-files

      - name: Build assets
        run: yarn build

      - name: Use environment public/.htaccess
        run: |
          if [ -f public/.htaccess.${{ inputs.environment }} ]; then
            cp public/.htaccess.${{ inputs.environment }} public/.htaccess
          fi

      - name: Activate maintenance mode
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.SSH_HOST }}
          username: ${{ vars.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: cd ${{ env.APP_PATH }} && php artisan down || true

      - name: Rsync files
        uses: burnett01/rsync-deployments@5.2.1
        with:
          switches: --recursive --no-perms --no-owner --no-group --ignore-times --compress --verbose --delete --exclude-from=.rsyncignore
          remote_path: ${{ vars.APP_PATH }}
          remote_host: ${{ vars.SSH_HOST }}
          remote_port: ${{ vars.SSH_PORT }}
          remote_user: ${{ vars.SSH_USER }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Ready up application & disable maintenance mode
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.SSH_HOST }}
          username: ${{ vars.SSH_USER }}
          port: ${{ vars.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ vars.APP_PATH }}
            rm -rf bootstrap/cache/*
            php artisan optimize:clear
            php artisan storage:link
            php artisan migrate --force
            php artisan auth:clear-resets
            php artisan optimize
            php artisan up
