name: Deploy Laravel Application

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      ADMIN_FIRST_NAME: ${{ vars.ADMIN_FIRST_NAME }}
      ADMIN_LAST_NAME: ${{ vars.ADMIN_LAST_NAME }}
      ADMIN_EMAIL: ${{ vars.ADMIN_EMAIL }}
      ADMIN_NICKNAME: ${{ vars.ADMIN_NICKNAME }}
      APP_ENV: ${{ secrets.APP_ENV }}
      DB_DATABASE: ${{ secrets.DB_DATABASE }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, intl, pdo, pdo_mysql
        tools: composer

    - name: Install Composer dependencies
      run: composer install --no-progress --no-interaction --prefer-dist --optimize-autoloader

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install Node.js dependencies
      run: yarn install

    - name: Build assets
      run: yarn build

    - name: Prepare environment file
      run: |
        cp .env.example .env
        echo "APP_ENV=${{ env.APP_ENV }}" >> .env
        echo "DB_DATABASE=${{ env.DB_DATABASE }}" >> .env
        echo "DB_USERNAME=${{ env.DB_USERNAME }}" >> .env
        echo "DB_PASSWORD=${{ env.DB_PASSWORD }}" >> .env
        echo "ADMIN_FIRST_NAME=${{ env.ADMIN_FIRST_NAME }}" >> .env
        echo "ADMIN_LAST_NAME=${{ env.ADMIN_LAST_NAME }}" >> .env
        echo "ADMIN_EMAIL=${{ env.ADMIN_EMAIL }}" >> .env
        echo "ADMIN_NICKNAME=${{ env.ADMIN_NICKNAME }}" >> .env
        echo "ADMIN_PASSWORD=\"${{ env.ADMIN_PASSWORD }}\"" >> .env

    - name: Generate application key
      run: php artisan key:generate

    - name: Deploy via SSH
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
        SSH_USER: ${{ secrets.SSH_USER }}
        SSH_SERVER: ${{ secrets.SSH_SERVER }}
        DEPLOYPATH: /home/schnupf1/${{ github.event.inputs.environment }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts

        # Sync application files to the server
        rsync -avz --delete-after --exclude='.git' --exclude='.github' --exclude='tests' --exclude='storage' $GITHUB_WORKSPACE/ $SSH_USER@$SSH_SERVER:$DEPLOYPATH

        # Run deployment commands on the server
        ssh $SSH_USER@$SSH_SERVER << EOF
          cd $DEPLOYPATH
          ln -sfn $DEPLOYPATH /home/schnupf1/www/${{ github.event.inputs.environment }}
          chmod 755 $DEPLOYPATH

          # Run database migrations with seed on the server
          /opt/cpanel/ea-php82/root/usr/bin/php artisan migrate:refresh --seed

          # Run Laravel optimizations on the server
          /opt/cpanel/ea-php82/root/usr/bin/php artisan optimize
          /opt/cpanel/ea-php82/root/usr/bin/php artisan config:cache
          /opt/cpanel/ea-php82/root/usr/bin/php artisan event:cache
          /opt/cpanel/ea-php82/root/usr/bin/php artisan route:cache
          /opt/cpanel/ea-php82/root/usr/bin/php artisan view:cache
        EOF
